# -*- coding: utf-8 -*-
"""embbedings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16_ffbVuG3hXkTFLA0BeaWzGhlu5tCiP9
"""

# !pip install -U sentence-transformers

from sentence_transformers import SentenceTransformer, util
import pandas as pd

models = ['all-MiniLM-L6-v2', 'sentence-transformers/stsb-roberta-large', 'all-mpnet-base-v2']

print('Descargando el modelo...')
model = SentenceTransformer(models[0])

sentences = [
    'El gato juega afuera',
    'me gusta tocar guitarra',
    'me encanta la pasta',
    'esta pelicula estuvo asombrosa',
    'el perro esta afuera',
    'te gusta la musica?',
    'estuvo muy buena la pelicula',
    'te gustaria una pizza?'
]

# import time
# start_time = time.time()

# embeddings = model.encode(sentences)

# end_time = time.time()
# elapsed_time_ms = (end_time - start_time) * 1000

# # Print the elapsed time
# print(f"Elapsed time: {elapsed_time_ms:.2f} milliseconds")


import ast

def text_to_embbedings(df, columns):
  df = df.copy()
  df[columns] = df[columns].applymap(
    lambda value: ', '.join([
        str(n)
        for n in model.encode(value)
    ])
  )

  return df

def read_embeddings(df, column: str):
  vectors = [list(v) for v in df[column].apply(ast.literal_eval)]
  return vectors


print('Cargando el dataset...')
df = pd.read_csv('../datasets/picta_publicaciones_procesadas_sin_nulas.csv')

print('Ejecutando el proceso de embeddings...')
df_vectors = text_to_embbedings(df, ['nombre', 'descripcion', 'categoria'])

print('Guardando el dataset...')
df_vectors.to_csv('../datasets/picta_publicaciones_procesadas_sin_nulas_embeddings.csv')


# cosine_scores = util.cos_sim(embeddings2, embeddings2)
# cosine_scores

# cosine_scores = util.cos_sim(vectors, vectors)
# cosine_scores

# pairs = []
# for i in range(len(cosine_scores) - 1):
#   for j in range(i+1, len(cosine_scores)):
#     pairs.append({'index': [i, j], 'score': cosine_scores[i][j]})

# pairs

# pairs = sorted(pairs, key=lambda x: x['score'], reverse=True)

# for pair in pairs[:2]:
#   i, j = pair['index']
#   print("{} ----> {}".format(sentences4[i], sentences4[j]))